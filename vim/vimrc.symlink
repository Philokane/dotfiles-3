" enable all features
set nocompatible

let mapleader=" "

set autoread

set noswapfile

set lazyredraw

source ~/.dotfiles/vim/autoload/pathogen.vim
execute pathogen#infect('bundle/{}', '~/.dotfiles/vim/bundle/{}')

" Wrap too long lines
set wrap
set lbr " wrap by word
set display=lastline " show partial lines

" Tabs are 2 characters
set tabstop=2

" (Auto)indent uses 2 characters
set shiftwidth=2

" spaces instead of tabs
set expandtab

" guess indentation
set autoindent
set copyindent
set preserveindent

" Expand the command line using tab
set wildchar=<Tab>

" show line numbers
set number

set ignorecase
set smartcase

" Fold using markers {{{
" like this
" }}}
set foldmethod=marker

" powerful backspaces
set backspace=indent,eol,start

" highlight the searchterms
set hlsearch

" jump to the matches while typing
set incsearch

" don't wrap words
set textwidth=0

" history
set history=50

" 1000 undo levels
set undolevels=1000

" show partial commands
set showcmd

" show matching braces
set showmatch

" don't leave backup files lying around after vim has closed
set nobackup
" workaround for `crontab -e` not working
set backupskip=/tmp/*,/private/tmp/*

" hide buffers rather than closing them
set hidden

" ignore some more uneditable files
set wildignore+=.git,.svn,*.pyc,*.o,*.beam
set wildignore+=*.png,*.mng,*.jpg,*.jpeg,*.gif,*.bmp,*.pdf,*.class,*.hi,tmp/**

if v:version >= 703
  " VIM 7.3 stuff

  " persistent undo
  set undofile
  set undodir=~/.vimundo
endif

" filetype detecting and syntax highlighting
filetype off
filetype plugin indent on

syntax enable

if has("gui_running")
  set columns=85
  set lines=55
endif

" highlight the 80th column
set colorcolumn=80

cnoremap %% <C-R>=expand('%:h').'/'<cr>

"" Whitespace
set nowrap
set tabstop=2 shiftwidth=2
set expandtab
set backspace=indent,eol,start
set list
set listchars=tab:▸\ ,trail:•,extends:❯,precedes:❮

"" Terminal
set mouse=a

let NERDTreeShowHidden=1
let NERDTreeQuitOnOpen=1

nmap <Leader>d :NERDTreeToggle<CR>
nmap <Leader>t :CtrlP<CR>
nmap <Leader>h :nohl<CR>

set clipboard=unnamed

set background=dark
colorscheme railscasts-theme

highlight clear SignColumn
highlight VertSplit    ctermbg=236
highlight ColorColumn  ctermbg=237
highlight LineNr       ctermbg=236 ctermfg=240
highlight CursorLineNr ctermbg=236 ctermfg=240
highlight CursorLine   ctermbg=236
highlight StatusLineNC ctermbg=238 ctermfg=0
highlight StatusLine   ctermbg=240 ctermfg=12
highlight IncSearch    ctermbg=0   ctermfg=3
highlight Search       ctermbg=0   ctermfg=9
highlight Visual       ctermbg=3   ctermfg=0
highlight Pmenu        ctermbg=240 ctermfg=12
highlight PmenuSel     ctermbg=0   ctermfg=3
highlight SpellBad     ctermbg=0   ctermfg=1

set splitright
set splitbelow

nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

"" fix problem with esc key delay?
"set noesckeys
"noremap <Esc> <Esc>

" reload vimrc if changed
augroup myvimrc
  au!
  au BufWritePost .vimrc,_vimrc,vimrc,.gvimrc,_gvimrc,gvimrc so $MYVIMRC | if has('gui_running') | endif
augroup END

python from powerline.vim import setup as powerline_setup
python powerline_setup()
python del powerline_setup

set laststatus=2

set encoding=utf-8
